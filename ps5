import java.io.*;
import java.util.*;
import java.lang.String;
import java.text.ParseException;
import java.text.SimpleDateFormat;

class Address implements Serializable {                 //implement class Serializable for reading/writing objects
    String city, state, country;
    int pincode;

    Address(String city, String state, int pincode, String country) {
        this.city = city;
        this.state = state;
        this.pincode = pincode;
        this.country = country;
    }
}


class Student extends Address {
    String firstName;
    Date dob;
    Address address;

    Student(String firstName, String date, String city, String state, int pincode, String country) {
        
        super(city, state, pincode, country);
        this.firstName = firstName;
        try {
            this.dob = new SimpleDateFormat("dd-MM-yyyy").parse(date);              //convert date from string to date class
        } catch (ParseException exc) {
            System.out.println("error in the date");
        }
    }
}


public class App {
    static Scanner sc = new Scanner(System.in);

    static void serializationTest() {

        Student obj1 = new Student("Max", "12-12-1997", "Indore", "Madhya Pradesh", 452001, "India");
    
        Student obj2 = new Student("Alex", "03-10-1995", "Indore", "Madhya Pradesh", 452001, "India");
    
        Student obj3 = new Student("Ross", "15-03-1999", "Indore", "Madhya Pradesh", 452001, "India");
    
        Student obj4 = new Student("Max", "07-11-1992", "Indore", "Madhya Pradesh", 452001, "India");
    
        ArrayList<Student> list = new ArrayList<>();
        list.add(obj1);
        list.add(obj2);
        list.add(obj3);
        list.add(obj4);
    
        String inputFileName;
        System.out.print("enter file name to write objects: ");               //take file name as command line argument from user
        inputFileName = sc.nextLine().trim();

        try {
            FileOutputStream fout = new FileOutputStream(inputFileName);
            ObjectOutputStream out = new ObjectOutputStream(fout);

            for (Student obj : list) {
                out.writeObject(obj);
                System.out.println("record written successfully");
            }
            out.flush();
            out.close();
        } catch (FileNotFoundException exc) {
            System.out.println("given file name not found");
        } catch (IOException exc) {
            System.out.println("an error occured while writing objects");
        }
    }


    static void deserializationTest() {
        String inputFileName;
        System.out.print("enter file name to read objects: ");
        inputFileName = sc.nextLine().trim();
        Student obj;

        try {
            FileInputStream fin = new FileInputStream(inputFileName);
            ObjectInputStream in = new ObjectInputStream(fin);
            
            for (int i = 0; i < 4; i++) {
                obj = (Student)in.readObject();
                System.out.println(obj.firstName + ", " + obj.dob + ", " + obj.city + ", " + obj.state + "(" + obj.pincode + ")");
            }
            in.close();
        } catch (FileNotFoundException exc) {
            System.out.println("given file name not found");
        } catch (IOException exc) {
            System.out.println("an error occurred while reading objects");
        } catch (ClassNotFoundException exc) {
            System.out.println("an error occurred while reading objects");
        } 
    }
    
    public static void main(String args[]) {
        serializationTest();
        deserializationTest();
    }
}
